import telebot
import random as r
from telebot import types
import time
import sqlite3
import os, subprocess

#-- –ú–æ–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏--
from detals import cpicok

bot = telebot.TeleBot('----')
'''
 –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 –°—á–µ—Ç –¥–µ—Ç–∞–ª–µ–π
 –ó–∞–¥–∞—á–∏ –∫–æ–ø—Ç–µ—Ä –∫–æ–∏–Ω—ã
 –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
'''

conn = sqlite3.connect('users.db', check_same_thread=False)
cur = conn.cursor()
cur.execute("""CREATE TABLE IF NOT EXISTS users(
   userid INT PRIMARY KEY,
   username TEXT,
   fname TEXT,
   grupa TEXT,
   age INT,
   Competence TEXT,
   Coptercoin INT,
   last_action TEXT,
   admin int);
""")

cur.execute("""CREATE TABLE IF NOT EXISTS Detals(
   id INT PRIMARY KEY,
   Detals TEXT,
   quantity INT,
   total TEXT);
""")

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
file = open('detals.txt','r')
bank_file = open('bank.txt','r')
CopterCoin = 0
kvest = 0

def Rewriting(Action):
    user = (message.id, message.from_user.username, message, "-", "-", 0, "-", 0, "regestration", 1 )
    cur.execute("INSERT INTO users VALUES(?, ?, ?, ?, ?, ?, ?);", user)
    conn.commit()

@bot.message_handler(commands=['start']) #–ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
def start(message):
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–π –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
    markup = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton("–ú–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º–º", url='https://t.me/RATTER0')
    markup.add(button1)
    #–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
    markup_Inside = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üåé –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
    btn2 = types.KeyboardButton("üå¶Ô∏è –ü–æ–≥–æ–¥–∞")
    btn3 = types.KeyboardButton("üì∞ –ù–æ–≤–æ—Å—Ç–∏")
    markup_Inside.add(btn1,btn2,btn3)
    #–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –ï—Å–ª–∏ —É–≤–∏–¥–∏—à—å –∫–∞–∫–∏–µ –ª–∏–±–æ –±–∞–≥–∏, —Ç–æ —Å—Ä–æ—á–Ω–æ —Å–æ–æ–±—â–∏ –º–Ω–µ –æ –Ω–∏—Ö!)".format(message.from_user), reply_markup=markup)
    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEHzyRj8kDdda2LbXTlXF-yl-FAgEPMTwACvxYAAs1FuEreBBj0UDUS7y4E')
    bot.send_message(message.chat.id, "–° —á–µ–≥–æ –Ω–∞—á–Ω–µ–º?", reply_markup=markup_Inside)

    user = (message.id, message.from_user.username, "-", "-", "-", 0, "-", 0, "start bot", 0 )
    cur.execute("INSERT INTO users VALUES(?, ?, ?, ?, ?, ?, ?);", user)
    conn.commit()

@bot.message_handler(commands=['secret','list','/lider_board, /balance'])
def comands(message):
     if message.text == '/secret':
         bot.send_message(message.chat.id, '–°–µ–∫—Ä–µ—Ç —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω')
         img = 'https://yandex.ru/images/search?text=%20%D0%B0%D0%BD%D0%B8%D0%BC%D0%B5&from=tabbar&pos='+str(r.randint(1,1000))+'&img_url=https%3A%2F%2Fget.wallhere.com%2Fphoto%2Fillustration-blonde-long-hair-anime-anime-girls-lookin'
         bot.send_photo(message.chat.id, photo=img)

     if message.text == '/list':
        with open('detals.txt') as file:
            while (line := file.readline().rstrip()):
                bot.send_message(message.chat.id, line)

     if message.text == '/lider_board':
        with open('ban.txt') as file:
            while (line := file.readline().rstrip()):
                bot.send_message(message.chat.id, line)


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    global kvest,CopterCoin,i,step
    if message.text == "üåé –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è":
        name = str(message.from_user.first_name)
        markup = types.InlineKeyboardMarkup()
        button1 = types.InlineKeyboardButton("–ü–æ–µ—Ö–∞–ª–∏!", callback_data='Step_1')
        markup.add(button1)
        bot.reply_to(message, "–•–æ—Ä–æ—à–æ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–æ–≤–∞—Ç—å—Å—è –Ω—É–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–µ–±–µ.", reply_markup=markup)
        step = 1
        bot.send_message(message.from_user.id,  "–û—Ç–ª–∏—á–Ω–æ!" + name + "\n –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –∫–æ–º–∞–Ω–¥—É)")

    elif (message.text == "üìë –ü–æ–¥—Å—á–µ—Ç –¥–µ—Ç–∞–ª–µ–π") and (kvest == 0):
        bot.send_message(message.from_user.id, '–•–æ—Ä–æ—à–æ –ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–µ—Ç–∞–ª–∏ –∏ –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ \n –ù–∞–ø—Ä–∏–º–µ—Ä "–ö–ª—é—á –¥–ª—è –ø—Ä–æ–ø–µ–ª–ª–µ—Ä–æ–≤ 5" –ù–∞–ø–∏—à–∏ –°—Ç–æ–ø, –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—à—å –ø–æ–¥—Å—á–µ—Ç')
        markup_Inside = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–µ—Ç–∞–ª–µ–π")
        markup_Inside.add(btn1)
        CopterCoin += 10
        kvest = 1

    elif (message.text == "–°—Ç–æ–ø") and (kvest == 1):
        bot.send_message(message.from_user.id, "–ú–æ–ª–æ–¥–µ—Ü! –¢–≤–æ–∏ —Ç—Ä—É–¥—ã –Ω–µ –±—É–¥—É—Ç –±–µ–∑–≤–æ–∑–º–µ–∑–¥–Ω—ã. –í–æ—Ç —Ç–µ–±–µ " + str(CopterCoin) + " –∫–æ–ø—Ç–µ—Ä–∫–æ–∏–Ω–æ–≤")
        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEHuRxj6jZgWzfsg8kXz2uPYU5JXD3hvwACOBkAAntfQEmO99QKq9iyTC4E')
        cpicok.writeBank(message.from_user.first_name,CopterCoin)
        kvest = 0

    elif kvest == 1:
        detal = []
        cpicok.search(message.text,detal)
        markup = types.InlineKeyboardMarkup(row_width=1)
        for i in detal:
            count = 1
            item = types.InlineKeyboardButton(i, callback_data = i)
            markup.add(item)
        button1 = types.InlineKeyboardButton("–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–µ—Ç–∞–ª–µ–π", callback_data='All')
        markup.add(button1)
        bot.send_message(message.chat.id, '–í–æ–∑–º–æ–∂–Ω–æ –≤—ã –∏–º–µ–ª–∏ –≤–≤–∏–¥—É:', reply_markup=markup)


    if (message.text == "–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–µ—Ç–∞–ª–µ–π") and (kvest == 1):
        bot.send_message(message.from_user.id, '–•–æ—Ä–æ—à–æ –ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–µ—Ç–∞–ª–∏ –∏ –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ \n –ù–∞–ø—Ä–∏–º–µ—Ä "–ö–ª—é—á –¥–ª—è –ø—Ä–æ–ø–µ–ª–ª–µ—Ä–æ–≤ 5" –ù–∞–ø–∏—à–∏ –°—Ç–æ–ø, –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—à—å –ø–æ–¥—Å—á–µ—Ç')
        CopterCoin += 10
        kvest = 1

    elif message.text == "–î–∞–π –∫–≤–µ—Å—Ç":
        bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏ –ø—Ä–∏–≤–µ—Ç")

    elif step == 1:
        cur.execute("DELETE FROM users WHERE userid='" + message.id + "';")
        user = (message.id, message.from_user.username, message, "-", "-", 0, "-", 0, "regestration", 1 )
        cur.execute("INSERT INTO users VALUES(?, ?, ?, ?, ?, ?, ?);", user)
        step = 2



@bot.callback_query_handler(func=lambda call:True)
def callback(call):
    global i
    if call.message:
        if call.data == 'All':
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text= '–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–µ—Ç–∞–ª–µ–π:')
            # –°–∫–∏–Ω—É—Ç—å —Ñ–æ—Ç–æ
        elif call.data == i:
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text= i)
        elif call.data == "Step_1":
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text="–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏ —Å–≤–æ—ë –§–ò–û")

bot.polling()
